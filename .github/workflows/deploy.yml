name: Build and Deploy to ECR and ECS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        run: |
          # Use commit SHA as unique image tag
          COMMIT_SHA=$(git rev-parse --short HEAD)
          IMAGE_TAG=$COMMIT_SHA
          ECR_REPO=arvor/research
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          ECR_URI=$ACCOUNT_ID.dkr.ecr.us-east-2.amazonaws.com/$ECR_REPO

          echo "Building image $ECR_URI:$IMAGE_TAG"
          docker build -t $ECR_URI:$IMAGE_TAG .
          docker push $ECR_URI:$IMAGE_TAG

          # Export variables for next step
          echo "ACCOUNT_ID=$ACCOUNT_ID" >> $GITHUB_ENV
          echo "ECR_URI=$ECR_URI" >> $GITHUB_ENV
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          
          # Validate ECR URI
          if [[ ! "$ECR_URI" =~ ^[0-9]+\.dkr\.ecr\.us-east-2\.amazonaws\.com/ ]]; then
            echo "Error: Invalid ECR URI format: $ECR_URI"
            exit 1
          fi

      - name: Update ECS task definition and service
        run: |
          # ECS variables
          TASK_DEF_NAME=research-task
          CLUSTER=arvor-back-office
          SERVICE=research-task-service-6pr6cyds
          
          # Use environment variables from previous step
          echo "Using ACCOUNT_ID: $ACCOUNT_ID"
          echo "Using ECR_URI: $ECR_URI"
          echo "Using IMAGE_TAG: $IMAGE_TAG"

          # Fetch current task definition
          aws ecs describe-task-definition --task-definition $TASK_DEF_NAME > taskdef.json

          # Extract and clean
          jq '.taskDefinition | del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)' taskdef.json > final-taskdef.json

          # Update container image
          jq '.containerDefinitions[0].image="'$ECR_URI:$IMAGE_TAG'"' final-taskdef.json > final-taskdef-updated.json

          # Register new task definition
          NEW_TASK_DEF_ARN=$(aws ecs register-task-definition \
            --cli-input-json file://final-taskdef-updated.json \
            --query 'taskDefinition.taskDefinitionArn' --output text)

          # Update service
          aws ecs update-service --cluster $CLUSTER --service $SERVICE --task-definition $NEW_TASK_DEF_ARN
